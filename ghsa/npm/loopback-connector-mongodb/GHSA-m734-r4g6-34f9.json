{
  "Severity": "HIGH",
  "UpdatedAt": "2019-06-04T19:35:49Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "loopback-connector-mongodb"
  },
  "Advisory": {
    "DatabaseId": 1461,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW03MzQtcjRnNi0zNGY5",
    "GhsaId": "GHSA-m734-r4g6-34f9",
    "References": [
      {
        "Url": "https://github.com/strongloop/loopback-connector-mongodb/issues/403"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m734-r4g6-34f9"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m734-r4g6-34f9"
      }
    ],
    "Description": "Versions of `loopback-connector-mongodb` before 3.6.0 are vulnerable to NoSQL injection.\n\nMongoDB Connector for LoopBack fails to properly sanitize a filter passed to query the database by allowing the dangerous `$where` property to be passed to the MongoDB Driver. The Driver allows the special `$where` property in a filter to execute JavaScript (client can pass in a malicious script) on the database Driver. This is an [intended feature of MongoDB](https://docs.mongodb.com/manual/core/server-side-javascript/) unless disabled ([instructions here](https://docs.mongodb.com/manual/core/server-side-javascript/#disable-server-side-js)).\n\nA proof of concept malicious query:\n\n```\nGET /POST filter={\"where\": {\"$where\": \"function(){sleep(5000); return this.title.contains('Hello');}\"}}\n```\n\nThe above makes the database sleep for 5 seconds and then returns all “Posts” with the title containing the word `Hello`.\n\n\n\n\n## Recommendation\n\nUpdate to version 3.6.0 or later.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2019-06-04T19:36:17Z",
    "Severity": "HIGH",
    "Summary": "NoSQL Injection in loopback-connector-mongodb",
    "UpdatedAt": "2020-08-31T18:33:05Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.6.0"
      },
      "VulnerableVersionRange": "\u003c 3.6.0"
    }
  ]
}