{
  "Severity": "MODERATE",
  "UpdatedAt": "2018-11-30T19:54:12Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "hoek"
  },
  "Advisory": {
    "DatabaseId": 290,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWpwNHgtdzYzbS03d2dt",
    "GhsaId": "GHSA-jp4x-w63m-7wgm",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2018-3728"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jp4x-w63m-7wgm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jp4x-w63m-7wgm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2018-3728"
      }
    ],
    "Description": "Versions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.\n\nThe `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.\n\nThis can be demonstrated like so:\n\n```javascript\nvar Hoek = require('hoek');\nvar malicious_payload = '{\"__proto__\":{\"oops\":\"It works !\"}}';\n\nvar a = {};\nconsole.log(\"Before : \" + a.oops);\nHoek.merge({}, JSON.parse(malicious_payload));\nconsole.log(\"After : \" + a.oops);\n```\n\nThis type of attack can be used to overwrite existing properties causing a potential denial of service.\n\n\n## Recommendation\n\nUpdate to version 4.2.1, 5.0.3 or later.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2018-04-26T15:25:17Z",
    "Severity": "MODERATE",
    "Summary": "Prototype Pollution in hoek",
    "UpdatedAt": "2021-01-08T18:33:00Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.0.3"
      },
      "VulnerableVersionRange": "\u003e= 5.0.0, \u003c 5.0.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "4.2.1"
      },
      "VulnerableVersionRange": "\u003c 4.2.1"
    }
  ]
}