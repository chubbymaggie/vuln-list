{
  "ID": "oval:org.debian:def:20080016",
  "Class": "vulnerability",
  "Metadata": {
    "Title": "CVE-2008-0016",
    "AffectedList": [
      {
        "Family": "unix",
        "Platform": "Debian GNU/Linux 10",
        "Product": "xulrunner"
      }
    ],
    "References": null,
    "Description": "several vulnerabilities",
    "Debian": {
      "MoreInfo": "\nDSA-1697\nSeveral remote vulnerabilities have been discovered in Iceape an\nunbranded version of the Seamonkey internet suite. The Common\nVulnerabilities and Exposures project identifies the following problems:\nJustin Schuh, Tom Cross and Peter Williams discovered a buffer\n   overflow in the parser for UTF-8 URLs, which may lead to the\n   execution of arbitrary code. (MFSA 2008-37)\nIt was discovered that a buffer overflow in MIME decoding can lead\n    to the execution of arbitrary code. (MFSA 2008-26)\nIt was discovered that missing boundary checks on a reference\n    counter for CSS objects can lead to the execution of arbitrary code.\n    (MFSA 2008-34)\nDevon Hubbard, Jesse Ruderman and Martijn Wargers discovered\n    crashes in the layout engine, which might allow the execution of\n    arbitrary code. (MFSA 2008-21)\nIgor Bukanov, Jesse Ruderman and Gary Kwong discovered crashes in\n    the Javascript engine, which might allow the execution of arbitrary\n    code. (MFSA 2008-21)\n\"moz_bug_r_a4\" discovered several cross-site scripting vulnerabilities.\n    (MFSA 2008-22)\nCollin Jackson and Adam Barth discovered that Javascript code\n    could be executed in the context or signed JAR archives. (MFSA 2008-23)\n\"moz_bug_r_a4\" discovered that XUL documements can escalate\n    privileges by accessing the pre-compiled \"fastload\" file.\n    (MFSA 2008-24)\n\"moz_bug_r_a4\" discovered that missing input sanitising in the\n    mozIJSSubScriptLoader.loadSubScript() function could lead to the\n    execution of arbitrary code. Iceape itself is not affected, but\n    some addons are. (MFSA 2008-25)\nClaudio Santambrogio discovered that missing access validation in\n    DOM parsing allows malicious web sites to force the browser to\n    upload local files to the server, which could lead to information\n    disclosure. (MFSA 2008-27)\nDaniel Glazman discovered that a programming error in the code for\n    parsing .properties files could lead to memory content being\n    exposed to addons, which could lead to information disclosure.\n    (MFSA 2008-29)\nMasahiro Yamada discovered that file URLs in directory listings\n    were insufficiently escaped. (MFSA 2008-30)\nJohn G. Myers, Frank Benkstein and Nils Toedtmann discovered that\n    alternate names on self-signed certificates were handled\n    insufficiently, which could lead to spoofings of secure connections.\n    (MFSA 2008-31)\nIt was discovered that URL shortcut files could be used to bypass the\n   same-origin restrictions. This issue does not affect current Iceape,\n   but might occur with additional extensions installed. (MFSA 2008-32)\nGreg McManus discovered a crash in the block reflow code, which might\n    allow the execution of arbitrary code. (MFSA 2008-33)\nBilly Rios discovered that passing an URL containing a pipe symbol\n    to Iceape can lead to Chrome privilege escalation. (MFSA 2008-35)\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLDocument::OnChannelRedirect() could be bypassed. (MFSA 2008-38)\n\"moz_bug_r_a4\" discovered that several vulnerabilities in\n   feedWriter could lead to Chrome privilege escalation. (MFSA 2008-39)\nPaul Nickerson discovered that an attacker could move windows\n   during a mouse click, resulting in unwanted action triggered by\n   drag-and-drop. (MFSA 2008-40)\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers. (MFSA 2008-41)\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers. (MFSA 2008-41)\nOlli Pettay and \"moz_bug_r_a4\" discovered a Chrome privilege\n   escalation vulnerability in XSLT handling. (MFSA 2008-41)\nJesse Ruderman discovered a crash in the layout engine, which might\n   allow the execution of arbitrary code. (MFSA 2008-42)\nIgor Bukanov, Philip Taylor, Georgi Guninski and Antoine Labour\n   discovered crashes in the Javascript engine, which might allow the\n   execution of arbitrary code. (MFSA 2008-42)\nDave Reed discovered that some Unicode byte order marks are\n   stripped from Javascript code before execution, which can result in\n   code being executed, which were otherwise part of a quoted string.\n   (MFSA 2008-43)\nBoris Zbarsky discovered that resource: URLs allow directory\n   traversal when using URL-encoded slashes. (MFSA 2008-44)\nGeorgi Guninski discovered that resource: URLs could bypass local\n   access restrictions. (MFSA 2008-44)\nBilly Hoffman discovered that the XBM decoder could reveal\n   uninitialised memory. (MFSA 2008-45)\nIt was discovered that a buffer overflow could be triggered via a\n   long header in a news article, which could lead to arbitrary code\n   execution. (MFSA 2008-46)\nGeorgi Guninski, Michal Zalewski and Chris Evan discovered that\n   the canvas element could be used to bypass same-origin\n   restrictions. (MFSA 2008-48)\nIt was discovered that insufficient checks in the Flash plugin glue\n   code could lead to arbitrary code execution. (MFSA 2008-49)\nJesse Ruderman discovered that a programming error in the\n   window.__proto__.__proto__ object could lead to arbitrary code\n   execution. (MFSA 2008-50)\nIt was discovered that crashes in the layout engine could lead to\n   arbitrary code execution. (MFSA 2008-52)\nJustin Schuh discovered that a buffer overflow in http-index-format\n   parser could lead to arbitrary code execution. (MFSA 2008-54)\nIt was discovered that a crash in the nsFrameManager might lead to\n   the execution of arbitrary code. (MFSA 2008-55)\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLHttpRequest::NotifyEventListeners() could be bypassed.\n   (MFSA 2008-56)\nChris Evans discovered that quote characters were improperly\n   escaped in the default namespace of E4X documents. (MFSA 2008-58)\nLiu Die Yu discovered an information leak through local shortcut\n   files. (MFSA 2008-59)\nJesse Ruderman  discovered that the layout engine is vulnerable to\n   DoS attacks that might trigger memory corruption and an integer\n   overflow. (MFSA 2008-60)\nBoris Zbarsky discovered that an information disclosure attack could\n   be performed via XBL bindings. (MFSA 2008-61)\nMarius Schilder discovered that it is possible to obtain sensible\n   data via a XMLHttpRequest. (MFSA 2008-64)\nChris Evans discovered that it is possible to obtain sensible data\n   via a JavaScript URL. (MFSA 2008-65)\nChip Salzenberg discovered possible phishing attacks via URLs with\n   leading whitespaces or control characters. (MFSA 2008-66)\nIt was discovered that it is possible to perform cross-site scripting\n   attacks via an XBL binding to an \"unloaded document.\" (MFSA 2008-68)\nIt was discovered that it is possible to run arbitrary JavaScript\n   with chrome privileges via unknown vectors. (MFSA 2008-68)\nDSA-1696\nSeveral remote vulnerabilities have been discovered in the Icedove\nmail client, an unbranded version of the Thunderbird mail client. The\nCommon Vulnerabilities and Exposures project identifies the following\nproblems:\nJustin Schuh, Tom Cross and Peter Williams discovered a buffer\n   overflow in the parser for UTF-8 URLs, which may lead to the execution\n   of arbitrary code. (MFSA 2008-37)\nIt was discovered that crashes in the Javascript engine could\n   potentially lead to the execution of arbitrary code. (MFSA 2008-20)\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLDocument::OnChannelRedirect() could be bypassed. (MFSA 2008-38)\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers. (MFSA 2008-41)\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers. (MFSA 2008-41)\nOlli Pettay and \"moz_bug_r_a4\" discovered a Chrome privilege\n   escalation vulnerability in XSLT handling. (MFSA 2008-41)\nJesse Ruderman discovered a crash in the layout engine, which might\n   allow the execution of arbitrary code. (MFSA 2008-42)\nIgor Bukanov, Philip Taylor, Georgi Guninski and Antoine Labour\n   discovered crashes in the Javascript engine, which might allow the\n   execution of arbitrary code. (MFSA 2008-42)\nDave Reed discovered that some Unicode byte order marks are\n   stripped from Javascript code before execution, which can result in\n   code being executed, which were otherwise part of a quoted string.\n   (MFSA 2008-43)\nIt was discovered that a directory traversal allows attackers to\n   read arbitrary files via a certain character. (MFSA 2008-44)\nIt was discovered that a directory traversal allows attackers to\n   bypass security restrictions and obtain sensitive information.\n   (MFSA 2008-44)\nIt was discovered that a buffer overflow could be triggered via a\n   long header in a news article, which could lead to arbitrary code\n   execution. (MFSA 2008-46)\nLiu Die Yu and Boris Zbarsky discovered an information leak through\n   local shortcut files. (MFSA 2008-47, MFSA 2008-59)\nGeorgi Guninski, Michal Zalewski and Chris Evan discovered that\n   the canvas element could be used to bypass same-origin\n   restrictions. (MFSA 2008-48)\nJesse Ruderman discovered that a programming error in the\n   window.__proto__.__proto__ object could lead to arbitrary code\n   execution. (MFSA 2008-50)\nIt was discovered that crashes in the layout engine could lead to\n   arbitrary code execution. (MFSA 2008-52)\nIt was discovered that crashes in the Javascript engine could lead to\n   arbitrary code execution. (MFSA 2008-52)\nIt was discovered that a crash in the nsFrameManager might lead to\n   the execution of arbitrary code. (MFSA 2008-55)\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLHttpRequest::NotifyEventListeners() could be bypassed.\n   (MFSA 2008-56)\nChris Evans discovered that quote characters were improperly\n   escaped in the default namespace of E4X documents. (MFSA 2008-58)\nJesse Ruderman  discovered that the layout engine is vulnerable to\n   DoS attacks that might trigger memory corruption and an integer\n   overflow. (MFSA 2008-60)\nBoris Zbarsky discovered that an information disclosure attack could\n   be performed via XBL bindings. (MFSA 2008-61)\nMarius Schilder discovered that it is possible to obtain sensible\n   data via a XMLHttpRequest. (MFSA 2008-64)\nChris Evans discovered that it is possible to obtain sensible data\n   via a JavaScript URL. (MFSA 2008-65)\nChip Salzenberg discovered possible phishing attacks via URLs with\n   leading whitespaces or control characters. (MFSA 2008-66)\nIt was discovered that it is possible to perform cross-site scripting\n   attacks via an XBL binding to an \"unloaded document.\" (MFSA 2008-68)\nIt was discovered that it is possible to run arbitrary JavaScript\n   with chrome privileges via unknown vectors. (MFSA 2008-68)\nDSA-1649\nSeveral remote vulnerabilities have been discovered in the Iceweasel web\nbrowser, an unbranded version of the Firefox browser. The Common\nVulnerabilities and Exposures project identifies the following problems:\nJustin Schuh, Tom Cross and Peter Williams discovered a buffer\n   overflow in the parser for UTF-8 URLs, which may lead to the\n   execution of arbitrary code.\n\u003cq\u003emoz_bug_r_a4\u003c/q\u003e discovered that the same-origin check in\n   nsXMLDocument::OnChannelRedirect() could by bypassed.\n\u003cq\u003emoz_bug_r_a4\u003c/q\u003e discovered that several vulnerabilities in\n   feedWriter could lead to Chrome privilege escalation.\nPaul Nickerson discovered that an attacker could move windows\n   during a mouse click, resulting in unwanted action triggered by\n   drag-and-drop.\n\u003cq\u003emoz_bug_r_a4\u003c/q\u003e discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers.\n\u003cq\u003emoz_bug_r_a4\u003c/q\u003e discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers.\nOlli Pettay and \u003cq\u003emoz_bug_r_a4\u003c/q\u003e discovered a Chrome privilege\n   escalation vulnerability in XSLT handling.\nJesse Ruderman discovered a crash in the layout engine, which might\n   allow the execution of arbitrary code.\nIgor Bukanov, Philip Taylor, Georgi Guninski and Antoine Labour\n   discovered crashes in the Javascript engine, which might allow the\n   execution of arbitrary code.\nDave Reed discovered that some Unicode byte order marks are\n   stripped from Javascript code before execution, which can result in\n   code being executed, which were otherwise part of a quoted string.\nGareth Heyes discovered that some Unicode surrogate characters are\n   ignored by the HTML parser.\nBoris Zbarsky discovered that resource: URLs allow directory\n   traversal when using URL-encoded slashes.\nGeorgi Guninski discovered that resource: URLs could bypass local\n   access restrictions.\nBilly Hoffman discovered that the XBM decoder could reveal\n   uninitialised memory.\nDSA-1669\nSeveral remote vulnerabilities have been discovered in Xulrunner, a\nruntime environment for XUL applications. The Common Vulnerabilities\nand Exposures project identifies the following problems:\nJustin Schuh, Tom Cross and Peter Williams discovered a buffer\n   overflow in the parser for UTF-8 URLs, which may lead to the\n   execution of arbitrary code.\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLDocument::OnChannelRedirect() could by bypassed.\n\"moz_bug_r_a4\" discovered that several vulnerabilities in\n   feedWriter could lead to Chrome privilege escalation.\nPaul Nickerson discovered that an attacker could move windows\n   during a mouse click, resulting in unwanted action triggered by\n   drag-and-drop.\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers.\n\"moz_bug_r_a4\" discovered a vulnerability which can result in\n   Chrome privilege escalation through XPCNativeWrappers.\nOlli Pettay and \"moz_bug_r_a4\" discovered a Chrome privilege\n   escalation vulnerability in XSLT handling.\nJesse Ruderman discovered a crash in the layout engine, which might\n   allow the execution of arbitrary code.\nIgor Bukanov, Philip Taylor, Georgi Guninski and Antoine Labour\n   discovered crashes in the Javascript engine, which might allow the\n   execution of arbitrary code.\nDave Reed discovered that some Unicode byte order marks are\n   stripped from Javascript code before execution, which can result in\n   code being executed, which were otherwise part of a quoted string.\nGareth Heyes discovered that some Unicode surrogate characters are\n   ignored by the HTML parser.\nBoris Zbarsky discovered that resource: URls allow directory\n   traversal when using URL-encoded slashes.\nGeorgi Guninski discovered that resource: URLs could bypass local\n   access restrictions.\nBilly Hoffman discovered that the XBM decoder could reveal\n   uninitialised memory.\nLiu Die Yu discovered an information leak through local shortcut\n   files.\nGeorgi Guninski, Michal Zalewski and Chris Evan discovered that\n   the canvas element could be used to bypass same-origin\n   restrictions.\nIt was discovered that insufficient checks in the Flash plugin glue\n   code could lead to arbitrary code execution.\nJesse Ruderman discovered that a programming error in the\n   window.__proto__.__proto__ object could lead to arbitrary code\n   execution.\nIt was discovered that crashes in the layout engine could lead to\n   arbitrary code execution.\nIt was discovered that crashes in the Javascript engine could lead to\n   arbitrary code execution.\nJustin Schuh discovered that a buffer overflow in http-index-format\n   parser could lead to arbitrary code execution.\nIt was discovered that a crash in the nsFrameManager might lead to\n   the execution of arbitrary code.\n\"moz_bug_r_a4\" discovered that the same-origin check in\n   nsXMLHttpRequest::NotifyEventListeners() could be bypassed.\nCollin Jackson discovered that the -moz-binding property bypasses\n   security checks on codebase principals.\nChris Evans discovered that quote characters were improperly\n   escaped in the default namespace of E4X documents.\n"
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": [
          {
            "Operator": "AND",
            "Criterias": null,
            "Criterions": [
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2",
                "Comment": "all architecture"
              },
              {
                "Negate": false,
                "TestRef": "oval:org.debian.oval:tst:2606",
                "Comment": "xulrunner DPKG is earlier than 1.9.0.4-1"
              }
            ]
          }
        ],
        "Criterions": null
      }
    ],
    "Criterions": [
      {
        "Negate": false,
        "TestRef": "oval:org.debian.oval:tst:1",
        "Comment": "Debian 10 is installed"
      }
    ]
  }
}